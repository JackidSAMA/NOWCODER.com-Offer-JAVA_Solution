package problem19;
/**
 * @author Jackid
 * JDK-version:1.8
 * Problem:牛客网-剑指offer《和为S的两个数字》
 * Result:已通过了所有的测试用例
 */
/*题目描述:
输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的乘积最小的。
输出描述:
对应每个测试案例，输出两个数，小的先输出。
 */

import java.util.ArrayList;

public class Solution {
	public ArrayList<Integer> FindNumbersWithSum(int[] array, int sum) {
		int pre = 0;//第1个指针初始指向数组的开头
		int end = array.length - 1;//第2个指针初始指向数组的结尾
		ArrayList<Integer> target = new ArrayList<>();//题目要求返回一个集合，集合中的元素为符合题意的两个数
		int min = Integer.MAX_VALUE;//全局变量min记录和为S的两个数的乘积最小值
		while (pre < end) {//如果两个指针还没碰到一起时，两个指针所指向的元素之和与sum比较
			if (array[pre] + array[end] == sum) {
				//如果两数相加结果与sum相同，则将两数乘积与min作比较，符合要求时更新全局变量min和集合target
				if (array[pre] * array[end] < min) {
					min = array[pre] * array[end];
					target.clear();
					target.add(array[pre]);
					target.add(array[end]);
				}
				//处理完成后，两个指针各向彼此靠拢一步
				pre++;end--;
			} else if (array[pre] + array[end] < sum) {
				//如果两数相加结果小于sum，则说明需要更大的数，pre指针向end指针靠近一步
				pre++;
			} else {
				//如果两数相加结果大于sum，则说明需要更小的数，end指针向pre指针靠近一步
				end--;
			}
		}
		return target;//最后返回集合target
	}
}